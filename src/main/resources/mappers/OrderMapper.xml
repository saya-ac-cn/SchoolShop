<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">    
    
<mapper namespace="api.dao.OrderDAO">

    <!--判断某一商品在订单明细表中是否存在-->
    <select id="existOrderByGoods"  resultType="java.lang.Integer">
       SELECT
            count(*)
        FROM
            `order` a
        LEFT JOIN `order_detail` b ON b.order_id = a.id
        WHERE
            b.goods_id = #{goodsId}
        AND a.`status` = 2
    </select>

    <!--获取子订单详情-->
    <select id="getOrderDetail" parameterType="OrderDetail"  resultType="OrderDetail">
        SELECT
            id,
            order_id as orderId,
            shop_id as shopId,
            goods_id as goodsId,
            current_price as currentPrice,
            quantity,
            total_price as totalPrice,
            create_time as createTime,
            update_time as updateTime
        FROM
            `order_detail`
        <where>
            <if test = "id != null and id != ''">
                id  = #{id}
            </if>
            <if test = "orderId != null and orderId != ''">
                and order_id  = #{orderId}
            </if>
            <if test = "shopId != null and shopId != ''">
                and shop_id = #{shopId}
            </if>
            <if test = "goodsId != null and goodsId != ''">
                and goods_id = #{goodsId}
            </if>
        </where>
    </select>

    <!--查询用户相关的订单-->
    <select id="getOrderReport" parameterType="OrderReport" resultType="OrderReport">
        SELECT
            d.id AS orderId,
            a.`status`,
            d.current_price as currentPrice,
            d.quantity,
            d.total_price as totalPrice,
            d.create_time as createTime,
            e.`name`,
            b.username,
            c.address,
            c.mobil,
            a.id as parentId
        FROM
            `order` a
        LEFT JOIN USER b ON a.user_id = b.id
        LEFT JOIN address c ON a.user_addres = c.id
        LEFT JOIN `order_detail` d ON d.order_id = a.id
        LEFT JOIN goods e ON d.goods_id = e.id
        <where>
            <if test = "shopId != null and shopId != ''">
                d.shop_id  = #{shopId}
            </if>
            <if test="startTime != null and startTime != ''and endTime != null and endTime != ''">
                and date_format(d.create_time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d')  and date_format(#{endTime},'%Y-%m-%d')
            </if>
        </where>
    </select>

    <!--查询用户的账户情况-->
    <select id="getWallet" resultType="Wallet">
        select a.id,a.wallet,a.update_time as updateTime  from wallet a where a.id = #{userID}
    </select>

    <!--创建用户资金表-->
    <insert id="insertWallet" useGeneratedKeys="true" keyProperty="id" parameterType="Wallet">
        INSERT INTO `wallet` (
            `id`,
            `wallet`,
            `update_time`
        )
        VALUES
            (
                #{id},
                #{wallet},
                #{updateTime}
            );
    </insert>

    <!--变更账户资金-->
    <update id="updateWallet" useGeneratedKeys="true" keyProperty="id" parameterType="Wallet">
         update wallet set wallet = #{wallet} ,update_time = #{updateTime} where id = #{id}
    </update>

    <!--删除订单及子订单-->
    <delete id="deleteOrderItem" parameterType="java.lang.Integer">
         delete from `order`  where id = #{id}
    </delete>

    <!--删除子订单-->
    <delete id="deleteOrderDetail" parameterType="java.lang.Integer">
        delete from `order_detail`  where id = #{id}
    </delete>

    <!--统计用户所有的订单-->
    <select id="totalMyOrder" parameterType="OrderQuery" resultType="OrderQuery">
        SELECT
            d.id as goodsId,
            d.main_images as imgUrl,
            d.`name` as goodsName,
            a.id as orderId,
            a.payment as payment,
            a.`status`,
            e.shop_name as shopName,
            b.current_price as currentPrice,
            b.quantity as quantity,
            b.total_price as totalPrice,
            c.address as address,
            a.end_time AS createTime,
            b.create_time as payTime,
            a.user_id as userId,
            b.id as orderDetail,
            e.shop_id as shopId,
            e.student_id as studentId
        FROM
            `order` a
        LEFT JOIN order_detail b ON a.id = b.order_id
        LEFT JOIN address c ON a.user_addres = c.id
        LEFT JOIN goods d ON b.goods_id = d.id
        LEFT JOIN shop e ON b.shop_id = e.shop_id
        <where>
            <if test = "userId != null and userId != ''">
                a.user_id  = #{userId}
            </if>
            <if test = "orderId != null and orderId != ''">
                and a.id  = #{orderId}
            </if>
            <if test = "status != null and status != ''">
                and a.`status`  = #{status}
            </if>
            <if test = "orderDetail != null and orderDetail != ''">
                and  b.id  = #{orderDetail}
            </if>
        </where>
        order BY a.id DESC

    </select>

    <!--添加一条订单记录-->
    <insert id="insertOrder" useGeneratedKeys="true" keyProperty="id" parameterType="Order">
        INSERT INTO `order` (
            `user_id`,
            `payment`,
            `status`,
            `create_time`
        )
        VALUES
        (
            #{userId},
            #{payment},
            #{status},
            #{createTime}
        );
    </insert>

    <!--添加一条订单明细记录-->
    <insert id="insertOrderDetail" useGeneratedKeys="true" keyProperty="id" parameterType="OrderDetail">
        INSERT INTO `order_detail` (
            `order_id`,
            `shop_id`,
            `goods_id`,
            `current_price`,
            `quantity`,
            `total_price`,
            `create_time`
        )
        VALUES
            (
            #{orderId},
            #{shopId},
            #{goodsId},
            #{currentPrice},
            #{quantity},
            #{totalPrice},
            #{createTime}
            );
    </insert>

    <!--修改订单-->
    <update id="updateOrder" useGeneratedKeys="true" keyProperty="id" parameterType="Order">
        UPDATE `order`
        <set>
            <if test="payment != null and payment != ''">
                `payment` = #{payment},
            </if>
            <if test="status != null and status != ''">
                `status` = #{status},
            </if>
            <if test="userAddres != null and userAddres != ''">
                `user_addres` = #{userAddres}
            </if>
            <if test="sendTime != null and sendTime != ''">
                `send_time` = #{sendTime},
            </if>
            <if test="endTime != null and endTime != ''">
                `end_time` = #{endTime},
            </if>
            <if test="closeTime != null and closeTime != ''">
                `close_time` = #{closeTime}
            </if>
            <if test="updateTime != null and updateTime != ''">
                `update_time` = #{updateTime}
            </if>
        </set>
        WHERE
            `id` = #{id};
    </update>

</mapper> 